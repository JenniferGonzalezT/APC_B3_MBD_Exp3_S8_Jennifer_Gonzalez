-- BORRAR OBJETOS
-- TABLAS
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
-- SECUENCIAS
DROP SEQUENCE SEQ_SALUD;
DROP SEQUENCE SEQ_EMPLEADO;



-- CREACIÓN DE TABLAS
CREATE TABLE AFP (
    id_afp NUMBER(5) GENERATED ALWAYS AS IDENTITY
        (START WITH 210 INCREMENT BY 6),
    nombre VARCHAR2(255) NOT NULL,
    
    CONSTRAINT PK_AFP PRIMARY KEY (id_afp)
);

CREATE TABLE SALUD (
    id_salud NUMBER(4),
    nombre VARCHAR2(40) NOT NULL,
    
    CONSTRAINT PK_SALUD PRIMARY KEY (id_salud)
);

CREATE TABLE EMPLEADO (
    id_empleado NUMBER(4),
    rut VARCHAR2(10) NOT NULL,
    nombre VARCHAR2(25) NOT NULL,
    apellido_paterno VARCHAR2(25) NOT NULL,
    apellido_materno VARCHAR2(25) NOT NULL,
    fecha_contratacion DATE NOT NULL,
    sueldo_base NUMBER(10) NOT NULL,
    bono_jefatura NUMBER(10),
    activo CHAR(1) NOT NULL,
    tipo_empleado VARCHAR2(25) NOT NULL,
    id_supervisor NUMBER(4),
    id_salud NUMBER(4) NOT NULL,
    id_afp NUMBER(5) NOT NULL,
    
    CONSTRAINT PK_EMPLEADO PRIMARY KEY (id_empleado),
    CONSTRAINT FK_EMPLEADO_EMPLEADO FOREIGN KEY (id_supervisor)
        REFERENCES EMPLEADO (id_empleado),
    CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY (id_salud)
        REFERENCES SALUD (id_salud),
    CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY (id_afp)
        REFERENCES AFP (id_afp)
);

CREATE TABLE VENDEDOR (
    id_empleado NUMBER(4),
    comision_venta NUMBER(5,2) NOT NULL,
    
    CONSTRAINT PK_VENDEDOR PRIMARY KEY (id_empleado),
    CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY (id_empleado)
        REFERENCES EMPLEADO (id_empleado)
);

CREATE TABLE ADMINISTRATIVO (
    id_empleado NUMBER(4),
    
    CONSTRAINT PK_ADMINISTRATIVO PRIMARY KEY (id_empleado),
    CONSTRAINT FK_ADMINISTRATIVO_EMPLEADO FOREIGN KEY (id_empleado)
        REFERENCES EMPLEADO (id_empleado)
);

CREATE TABLE MEDIO_PAGO (
    id_mpago NUMBER(3),
    nombre VARCHAR2(50) NOT NULL,
    
    CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY (id_mpago)
);

CREATE TABLE VENTA (
    id_venta NUMBER(4) GENERATED ALWAYS AS IDENTITY
        (START WITH 5050 INCREMENT BY 3),
    fecha_venta DATE NOT NULL,
    total_venta NUMBER(10) NOT NULL,
    id_mpago NUMBER(3) NOT NULL,
    id_empleado NUMBER(4) NOT NULL,
    
    CONSTRAINT PK_VENTA PRIMARY KEY (id_venta),
    CONSTRAINT FK_VENTA_MEDIO_PAGO FOREIGN KEY (id_mpago)
        REFERENCES MEDIO_PAGO (id_mpago),
    CONSTRAINT FK_VENTA_EMPLEADO FOREIGN KEY (id_empleado)
        REFERENCES EMPLEADO (id_empleado)
);

CREATE TABLE REGION (
    id_region NUMBER(4),
    nombre VARCHAR2(255) NOT NULL,
    
    CONSTRAINT PK_REGION PRIMARY KEY (id_region)
);

CREATE TABLE COMUNA (
    id_comuna NUMBER(4),
    nombre VARCHAR2(100) NOT NULL,
    id_region NUMBER(4) NOT NULL,
    
    CONSTRAINT PK_COMUNA PRIMARY KEY (id_comuna),
    CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (id_region)
        REFERENCES REGION (id_region)
);

CREATE TABLE PROVEEDOR (
    id_proveedor NUMBER(5),
    nombre VARCHAR2(150) NOT NULL,
    rut VARCHAR2(10) NOT NULL,
    telefono VARCHAR2(10) NOT NULL,
    email VARCHAR2(200) NOT NULL,
    direccion VARCHAR2(200) NOT NULL,
    id_comuna NUMBER(4) NOT NULL,
    
    CONSTRAINT PK_PROVEEDOR PRIMARY KEY (id_proveedor),
    CONSTRAINT FK_PROVEEDOR_COMUNA FOREIGN KEY (id_comuna)
        REFERENCES COMUNA (id_comuna)
);

CREATE TABLE CATEGORIA (
    id_categoria NUMBER(3),
    nombre VARCHAR2(255) NOT NULL,
    
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (id_categoria)
);

CREATE TABLE MARCA (
    id_marca NUMBER(3),
    nombre VARCHAR2(25) NOT NULL,
    
    CONSTRAINT PK_MARCA PRIMARY KEY (id_marca)
);

CREATE TABLE PRODUCTO (
    id_producto NUMBER(4),
    nombre VARCHAR2(100) NOT NULL,
    precio_unitario NUMBER NOT NULL,
    origen_nacional CHAR(1) NOT NULL,
    stock_minimo NUMBER(3) NOT NULL,
    activo CHAR(1) NOT NULL,
    id_marca NUMBER(3) NOT NULL,
    id_categoria NUMBER(3) NOT NULL,
    id_proveedor NUMBER(5) NOT NULL,
    
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (id_producto),
    CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (id_marca)
        REFERENCES MARCA (id_marca),
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (id_categoria)
        REFERENCES CATEGORIA (id_categoria),
    CONSTRAINT FK_PRODUCTO_PROVEEDOR FOREIGN KEY (id_proveedor)
        REFERENCES PROVEEDOR (id_proveedor)
);

CREATE TABLE DETALLE_VENTA (
    id_venta NUMBER(4),
    id_producto NUMBER(4),
    cantidad NUMBER(6) NOT NULL,
    
    CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY (id_venta, id_producto),
    CONSTRAINT FK_DETALLE_VENTA_VENTA FOREIGN KEY (id_venta)
        REFERENCES VENTA (id_venta),
    CONSTRAINT FK_DETALLE_VENTA_PRODUCTO FOREIGN KEY (id_producto)
        REFERENCES PRODUCTO (id_producto)  
);



-- MODIFICACIONES
ALTER TABLE EMPLEADO
ADD CONSTRAINT CK_EMPLEADO_SUELDO_BASE
CHECK (sueldo_base >= 400000);

ALTER TABLE VENDEDOR
ADD CONSTRAINT CK_VENDEDOR_COMISION_VENTA
CHECK (comision_venta BETWEEN 0 AND 0.25);

ALTER TABLE PRODUCTO
ADD CONSTRAINT CK_PRODUCTO_STOCK_MINIMO
CHECK (stock_minimo >= 3);

ALTER TABLE PROVEEDOR
ADD CONSTRAINT UK_PROVEEDOR_EMAIL
UNIQUE (email);

ALTER TABLE MARCA
ADD CONSTRAINT UK_MARCA_NOMBRE
UNIQUE (nombre);

ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT CK_DETALLE_VENTA_CANTIDAD
CHECK (cantidad >= 1);



-- SECUENCIAS
CREATE SEQUENCE SEQ_SALUD
START WITH 2050
INCREMENT BY 10;

CREATE SEQUENCE SEQ_EMPLEADO
START WITH 750
INCREMENT BY 3;



-- POBLAMIENTO DE TABLAS
-- AFP
INSERT INTO AFP (nombre) VALUES ('AFP Habitat');
INSERT INTO AFP (nombre) VALUES ('AFP Cuprum');
INSERT INTO AFP (nombre) VALUES ('AFP Provida');
INSERT INTO AFP (nombre) VALUES ('AFP PlanVital');

-- SALUD
INSERT INTO SALUD VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');
INSERT INTO SALUD VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Colmena');
INSERT INTO SALUD VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Banmédica');
INSERT INTO SALUD VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Cruz Blanca');

-- EMPLEADO
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '11111111-1', 'Marcela', 'González', 'Pérez',
    TO_DATE('15/03/2022','DD/MM/YYYY'), 950000, 80000, 'S', 'Administrativo', NULL, 2050, 210);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '22222222-2', 'José', 'Muñoz', 'Ramírez',
    TO_DATE('10/07/2021','DD/MM/YYYY'), 900000, 75000, 'S', 'Administrativo', NULL, 2060, 216);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '33333333-3', 'Verónica', 'Soto', 'Alarcón',
    TO_DATE('05/01/2020','DD/MM/YYYY'), 880000, 70000, 'S', 'Vendedor', 750, 2060, 228);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '44444444-4', 'Luis', 'Reyes', 'Fuentes',
    TO_DATE('01/04/2023','DD/MM/YYYY'), 560000, NULL, 'S', 'Vendedor', 750, 2070, 228);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '55555555-5', 'Claudia', 'Fernández', 'Lagos',
    TO_DATE('15/04/2023','DD/MM/YYYY'), 600000, NULL, 'S', 'Vendedor', 753, 2070, 216);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '66666666-6', 'Carlos', 'Navarro', 'Vega',
    TO_DATE('01/05/2023','DD/MM/YYYY'), 610000, NULL, 'S', 'Administrativo', 753, 2060, 210);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '77777777-7', 'Javiera', 'Pino', 'Rojas',
    TO_DATE('10/05/2023','DD/MM/YYYY'), 650000, NULL, 'S', 'Administrativo', 750, 2050, 210);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '88888888-8', 'Diego', 'Mella', 'Contreras',
    TO_DATE('12/05/2023','DD/MM/YYYY'), 620000, NULL, 'S', 'Vendedor', 750, 2060, 216);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '99999999-9', 'Fernanda', 'Salas', 'Herrera',
    TO_DATE('18/05/2023','DD/MM/YYYY'), 570000, NULL, 'S', 'Vendedor', 753, 2070, 228);
INSERT INTO EMPLEADO VALUES(SEQ_EMPLEADO.NEXTVAL, '10101010-0', 'Tomás', 'Vidal', 'Espinoza',
    TO_DATE('01/06/2023','DD/MM/YYYY'), 530000, NULL, 'S', 'Vendedor', NULL, 2050, 222);

-- VENDEDOR
INSERT INTO VENDEDOR VALUES (756, 0.25);
INSERT INTO VENDEDOR VALUES (759, 0.2);
INSERT INTO VENDEDOR VALUES (762, 0.1);
INSERT INTO VENDEDOR VALUES (771, 0.1);
INSERT INTO VENDEDOR VALUES (774, 0.05);
INSERT INTO VENDEDOR VALUES (777, 0);

-- ADMINISTRATIVO
INSERT INTO ADMINISTRATIVO VALUES (750);
INSERT INTO ADMINISTRATIVO VALUES (753);
INSERT INTO ADMINISTRATIVO VALUES (765);
INSERT INTO ADMINISTRATIVO VALUES (768);

-- MEDIO_PAGO
INSERT INTO MEDIO_PAGO VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO VALUES (14, 'Cheque');

-- VENTA
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado)
    VALUES (TO_DATE('12/05/2023','DD/MM/YYYY'), 225990, 12, 771);
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado)
    VALUES (TO_DATE('23/10/2023','DD/MM/YYYY'), 524990, 13, 777);
INSERT INTO VENTA (fecha_venta, total_venta, id_mpago, id_empleado)
    VALUES (TO_DATE('17/02/2023','DD/MM/YYYY'), 466990, 11, 759);

-- REGION
INSERT INTO REGION VALUES (1, 'Región Metropolitana');
INSERT INTO REGION VALUES (2, 'Valparaíso');
INSERT INTO REGION VALUES (3, 'Biobío');
INSERT INTO REGION VALUES (4, 'Los Lagos');

-- COMUNA
INSERT INTO COMUNA VALUES (1, 'Santiago', 1);
INSERT INTO COMUNA VALUES (2, 'Puente Alto', 1);
INSERT INTO COMUNA VALUES (3, 'Viña del Mar', 2);
INSERT INTO COMUNA VALUES (4, 'Concepción', 3);
INSERT INTO COMUNA VALUES (5, 'Puerto Montt', 4);

-- PROVEEDOR
INSERT INTO PROVEEDOR VALUES (1, 'Lechería Los Lagos', '76543120-5', '652345678',
    'ventas@lecherialoslagos.cl', 'Camino Rural Km 12', 5);
INSERT INTO PROVEEDOR VALUES (2, 'Distribuidora Abarrotes del Sur', '70654321-9', '652112233',
    'contacto@abarrotesdelsur.cl', 'Av. Presidente Ibáñez 1450', 5);
INSERT INTO PROVEEDOR VALUES (3, 'Nestlé Chile S.A.', '76543210-9', '227654321',
    'contacto@nestle.cl', 'Av. del Valle 945', 1);
INSERT INTO PROVEEDOR VALUES (4, 'CCU S.A.', '60804000-0', '226543210',
    'ventas@ccu.cl', 'Av. Vitacura 2670', 1);

-- CATEGORIA
INSERT INTO CATEGORIA VALUES (1, 'Abarrotes');
INSERT INTO CATEGORIA VALUES (2, 'Lácteos');
INSERT INTO CATEGORIA VALUES (3, 'Bebidas');
INSERT INTO CATEGORIA VALUES (4, 'Artículos de Aseo');
INSERT INTO CATEGORIA VALUES (5, 'Productos de Temporada');

-- MARCA
INSERT INTO MARCA VALUES (1, 'Colún');
INSERT INTO MARCA VALUES (2, 'Ideal');
INSERT INTO MARCA VALUES (3, 'McKAY');
INSERT INTO MARCA VALUES (4, 'Bilz y Pap');
INSERT INTO MARCA VALUES (5, 'Virutex');
INSERT INTO MARCA VALUES (6, 'Cachantun');

-- PRODUCTO
INSERT INTO PRODUCTO VALUES (1001, 'Leche Entera Colún 1L', 1350, 'S', 10, 'S', 1, 2, 1);
INSERT INTO PRODUCTO VALUES (1002, 'Pan de Molde Ideal 700g', 3990, 'S', 8, 'S', 2, 1, 2);
INSERT INTO PRODUCTO VALUES (1003, 'Bebida Pap 1.5L', 2050, 'S', 12, 'S', 4, 3, 4);
INSERT INTO PRODUCTO VALUES (1004, 'Agua Mineral Cachantun 1.6L', 1200, 'S', 10, 'S', 6, 3, 4);
INSERT INTO PRODUCTO VALUES (1005, 'Esponja Virutex Antibacterial 3 un.', 1290, 'S', 20, 'S', 5, 4, 2);
INSERT INTO PRODUCTO VALUES (1006, 'Galleta Tritón', 820, 'S', 15, 'S', 3, 5, 3);

-- DETALLE_VENTA
INSERT INTO DETALLE_VENTA VALUES (5050, 1001, 2);
INSERT INTO DETALLE_VENTA VALUES (5050, 1002, 1);
INSERT INTO DETALLE_VENTA VALUES (5053, 1003, 2);
INSERT INTO DETALLE_VENTA VALUES (5053, 1006, 3);
INSERT INTO DETALLE_VENTA VALUES (5056, 1004, 1);
INSERT INTO DETALLE_VENTA VALUES (5056, 1005, 2);



-- RECUPERACIÓN DE DATOS
-- INFORME 1: SIMULACIÓN SUELDOS DE EMPLEADOS
SELECT
    id_empleado AS "IDENTIFICADOR",
    nombre || ' ' || apellido_paterno || ' ' || apellido_materno AS "NOMBRE COMPLETO",
    sueldo_base AS "SALARIO",
    bono_jefatura AS "BONIFICACION",
    sueldo_base + bono_jefatura AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE bono_jefatura IS NOT NULL AND activo = 'S'
ORDER BY "SALARIO SIMULADO" DESC, apellido_paterno DESC;

-- INFORME 2: LISTA DE EMPLEADOS SEGÚN RANGO DE SUELDO
SELECT
    nombre || ' ' || apellido_paterno || ' ' || apellido_materno AS "EMPLEADO",
    sueldo_base AS "SUELDO",
    sueldo_base * 0.08 AS "POSIBLE AUMENTO",
    sueldo_base * 1.08 AS "SUELDO SIMULADO"
FROM EMPLEADO
WHERE sueldo_base BETWEEN 550000 AND 800000
ORDER BY sueldo_base ASC;